{"name": "test_phones_category", "status": "failed", "statusDetails": {"message": "AssertionError: Найден не телефон: {'Sony vaio i5', 'Sony vaio i7'}\nassert False\n +  where False = <built-in method issubset of set object at 0x109fc6500>({'HTC One M9', 'Iphone 6 32gb', 'Nexus 6', 'Nokia lumia 1520', 'Samsung galaxy s6', 'Samsung galaxy s7', ...})\n +    where <built-in method issubset of set object at 0x109fc6500> = {'HTC One M9', 'Iphone 6 32gb', 'Nexus 6', 'Nokia lumia 1520', 'Samsung galaxy s6', 'Samsung galaxy s7', ...}.issubset\n +      where {'HTC One M9', 'Iphone 6 32gb', 'Nexus 6', 'Nokia lumia 1520', 'Samsung galaxy s6', 'Samsung galaxy s7', ...} = set(['Samsung galaxy s6', 'Nokia lumia 1520', 'Nexus 6', 'Samsung galaxy s7', 'Iphone 6 32gb', 'Sony xperia z5', ...])\n +    and   {'HTC One M9', 'Iphone 6 32gb', 'Nexus 6', 'Nokia lumia 1520', 'Samsung galaxy s6', 'Samsung galaxy s7', ...} = set(['Samsung galaxy s6', 'Nokia lumia 1520', 'Nexus 6', 'Samsung galaxy s7', 'Iphone 6 32gb', 'Sony xperia z5', ...])", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"706739b5e581fb2dbbf7a5c3d36593c0\")>\n\n    def test_phones_category(driver):\n        wait = WebDriverWait(driver, 15)\n        wait.until(EC.element_to_be_clickable((By.LINK_TEXT, \"Phones\"))).click()\n    \n        product_names = get_product_names(driver)\n    \n        expected_phones = [\n            \"Samsung galaxy s6\", \"Nokia lumia 1520\", \"Nexus 6\",\n            \"Samsung galaxy s7\", \"Iphone 6 32gb\", \"Sony xperia z5\",\n            \"HTC One M9\"\n        ]\n    \n>       assert set(product_names).issubset(\n            set(expected_phones)), f\"Найден не телефон: {set(product_names) - set(expected_phones)}\"\nE       AssertionError: Найден не телефон: {'Sony vaio i5', 'Sony vaio i7'}\nE       assert False\nE        +  where False = <built-in method issubset of set object at 0x109fc6500>({'HTC One M9', 'Iphone 6 32gb', 'Nexus 6', 'Nokia lumia 1520', 'Samsung galaxy s6', 'Samsung galaxy s7', ...})\nE        +    where <built-in method issubset of set object at 0x109fc6500> = {'HTC One M9', 'Iphone 6 32gb', 'Nexus 6', 'Nokia lumia 1520', 'Samsung galaxy s6', 'Samsung galaxy s7', ...}.issubset\nE        +      where {'HTC One M9', 'Iphone 6 32gb', 'Nexus 6', 'Nokia lumia 1520', 'Samsung galaxy s6', 'Samsung galaxy s7', ...} = set(['Samsung galaxy s6', 'Nokia lumia 1520', 'Nexus 6', 'Samsung galaxy s7', 'Iphone 6 32gb', 'Sony xperia z5', ...])\nE        +    and   {'HTC One M9', 'Iphone 6 32gb', 'Nexus 6', 'Nokia lumia 1520', 'Samsung galaxy s6', 'Samsung galaxy s7', ...} = set(['Samsung galaxy s6', 'Nokia lumia 1520', 'Nexus 6', 'Samsung galaxy s7', 'Iphone 6 32gb', 'Sony xperia z5', ...])\n\ntests/test_add_items_to_cart_and_order_placement.py:311: AssertionError"}, "start": 1740334535469, "stop": 1740334535644, "uuid": "daa9b31e-fc34-4240-bed9-5b80c2e9ef96", "historyId": "8fb2b6fc7a83ca92540b138962df69f3", "testCaseId": "8fb2b6fc7a83ca92540b138962df69f3", "fullName": "tests.test_add_items_to_cart_and_order_placement#test_phones_category", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_add_items_to_cart_and_order_placement"}, {"name": "host", "value": "MacBook-Pro-Natasha.local"}, {"name": "thread", "value": "81128-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_add_items_to_cart_and_order_placement"}]}
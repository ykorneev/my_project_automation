{"name": "test_registration_existing_user", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"nav-link\" href=\"#\" id=\"signin2\" data-toggle=\"modal\" data-target=\"#signInModal\" style=\"display: block;\">...</a> is not clickable at point (1036, 36). Other element would receive the click: <div class=\"modal fade show\" id=\"signInModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"signInModalLabel\" style=\"display: block;\">...</div>\n  (Session info: chrome=133.0.6943.127)\nStacktrace:\n0   chromedriver                        0x000000010cad6d98 chromedriver + 5954968\n1   chromedriver                        0x000000010cace9ca chromedriver + 5921226\n2   chromedriver                        0x000000010c58e5e0 chromedriver + 415200\n3   chromedriver                        0x000000010c5e6c10 chromedriver + 777232\n4   chromedriver                        0x000000010c5e4a71 chromedriver + 768625\n5   chromedriver                        0x000000010c5e2112 chromedriver + 758034\n6   chromedriver                        0x000000010c5e12e1 chromedriver + 754401\n7   chromedriver                        0x000000010c5d3dbd chromedriver + 699837\n8   chromedriver                        0x000000010c606012 chromedriver + 905234\n9   chromedriver                        0x000000010c5d3738 chromedriver + 698168\n10  chromedriver                        0x000000010c6061ce chromedriver + 905678\n11  chromedriver                        0x000000010c62d39e chromedriver + 1065886\n12  chromedriver                        0x000000010c605de3 chromedriver + 904675\n13  chromedriver                        0x000000010c5d1c6a chromedriver + 691306\n14  chromedriver                        0x000000010c5d2dc1 chromedriver + 695745\n15  chromedriver                        0x000000010ca99e50 chromedriver + 5705296\n16  chromedriver                        0x000000010ca9dda0 chromedriver + 5721504\n17  chromedriver                        0x000000010ca7b797 chromedriver + 5580695\n18  chromedriver                        0x000000010ca9e82b chromedriver + 5724203\n19  chromedriver                        0x000000010ca69fc4 chromedriver + 5509060\n20  chromedriver                        0x000000010cabd088 chromedriver + 5849224\n21  chromedriver                        0x000000010cabd24f chromedriver + 5849679\n22  chromedriver                        0x000000010cace5a8 chromedriver + 5920168\n23  libsystem_pthread.dylib             0x00007ff818c2f253 _pthread_start + 99\n24  libsystem_pthread.dylib             0x00007ff818c2abef thread_start + 15", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"00ce775bd76024a0236f4e3d9f5f0225\")>\n\n    def test_registration_existing_user(driver):\n        wait = WebDriverWait(driver, 10)\n>       driver.find_element(By.ID, \"signin2\").click()\n\ntests/test_authorization_and_registration.py:85: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:570: in _execute\n    return self._parent.execute(command, params)\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x107b8d1f0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...7ff818c2f253 _pthread_start + 99\\\\n24  libsystem_pthread.dylib             0x00007ff818c2abef thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"nav-link\" href=\"#\" id=\"signin2\" data-toggle=\"modal\" data-target=\"#signInModal\" style=\"display: block;\">...</a> is not clickable at point (1036, 36). Other element would receive the click: <div class=\"modal fade show\" id=\"signInModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"signInModalLabel\" style=\"display: block;\">...</div>\nE         (Session info: chrome=133.0.6943.127)\nE       Stacktrace:\nE       0   chromedriver                        0x000000010cad6d98 chromedriver + 5954968\nE       1   chromedriver                        0x000000010cace9ca chromedriver + 5921226\nE       2   chromedriver                        0x000000010c58e5e0 chromedriver + 415200\nE       3   chromedriver                        0x000000010c5e6c10 chromedriver + 777232\nE       4   chromedriver                        0x000000010c5e4a71 chromedriver + 768625\nE       5   chromedriver                        0x000000010c5e2112 chromedriver + 758034\nE       6   chromedriver                        0x000000010c5e12e1 chromedriver + 754401\nE       7   chromedriver                        0x000000010c5d3dbd chromedriver + 699837\nE       8   chromedriver                        0x000000010c606012 chromedriver + 905234\nE       9   chromedriver                        0x000000010c5d3738 chromedriver + 698168\nE       10  chromedriver                        0x000000010c6061ce chromedriver + 905678\nE       11  chromedriver                        0x000000010c62d39e chromedriver + 1065886\nE       12  chromedriver                        0x000000010c605de3 chromedriver + 904675\nE       13  chromedriver                        0x000000010c5d1c6a chromedriver + 691306\nE       14  chromedriver                        0x000000010c5d2dc1 chromedriver + 695745\nE       15  chromedriver                        0x000000010ca99e50 chromedriver + 5705296\nE       16  chromedriver                        0x000000010ca9dda0 chromedriver + 5721504\nE       17  chromedriver                        0x000000010ca7b797 chromedriver + 5580695\nE       18  chromedriver                        0x000000010ca9e82b chromedriver + 5724203\nE       19  chromedriver                        0x000000010ca69fc4 chromedriver + 5509060\nE       20  chromedriver                        0x000000010cabd088 chromedriver + 5849224\nE       21  chromedriver                        0x000000010cabd24f chromedriver + 5849679\nE       22  chromedriver                        0x000000010cace5a8 chromedriver + 5920168\nE       23  libsystem_pthread.dylib             0x00007ff818c2f253 _pthread_start + 99\nE       24  libsystem_pthread.dylib             0x00007ff818c2abef thread_start + 15\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException"}, "start": 1740329592471, "stop": 1740329593518, "uuid": "a5e73699-48b1-407f-8dd6-a1f0f1c4fe87", "historyId": "2a6c5e171ee581a2ecea4f28559d15fd", "testCaseId": "2a6c5e171ee581a2ecea4f28559d15fd", "fullName": "tests.test_authorization_and_registration#test_registration_existing_user", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_authorization_and_registration"}, {"name": "host", "value": "MacBook-Pro-Natasha.local"}, {"name": "thread", "value": "71895-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_authorization_and_registration"}]}
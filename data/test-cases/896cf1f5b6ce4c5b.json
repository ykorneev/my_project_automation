{
  "uid" : "896cf1f5b6ce4c5b",
  "name" : "test_incorrect_card_number",
  "fullName" : "tests.test_add_items_to_cart_and_order_placement#test_incorrect_card_number",
  "historyId" : "357f8f66240ebb7a22ad5356f2512ea3",
  "time" : {
    "start" : 1745242562176,
    "stop" : 1745242570949,
    "duration" : 8773
  },
  "status" : "broken",
  "statusMessage" : "NameError: name 'TimeoutException' is not defined",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c7ca33e0cb75cef5df1130bc71828e8b\")>\n\n    def test_incorrect_card_number(driver):\n        home_page = HomePage(driver)\n        product_page = ProductPage(driver)\n        cart_page = CartPage(driver)\n        home_page.select_category(\"Laptops\")\n        home_page.open_product(\"MacBook air\")\n        product_page.add_to_cart()\n        cart_page.open_cart()\n        cart_page.checkout(\n            name=\"Yura\",\n            country=\"Poland\",\n            city=\"Warsaw\",\n            card=\"1234567890123456\",\n            month=\"12\",\n            year=\"2025\"\n        )\n        try:\n>           alert = WebDriverWait(driver, 5).until(EC.alert_is_present())\n\ntests/test_add_items_to_cart_and_order_placement.py:167: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c7ca33e0cb75cef5df1130bc71828e8b\")>\nmethod = <function alert_is_present.<locals>._predicate at 0x1074a2700>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c7ca33e0cb75cef5df1130bc71828e8b\")>\n\n    def test_incorrect_card_number(driver):\n        home_page = HomePage(driver)\n        product_page = ProductPage(driver)\n        cart_page = CartPage(driver)\n        home_page.select_category(\"Laptops\")\n        home_page.open_product(\"MacBook air\")\n        product_page.add_to_cart()\n        cart_page.open_cart()\n        cart_page.checkout(\n            name=\"Yura\",\n            country=\"Poland\",\n            city=\"Warsaw\",\n            card=\"1234567890123456\",\n            month=\"12\",\n            year=\"2025\"\n        )\n        try:\n            alert = WebDriverWait(driver, 5).until(EC.alert_is_present())\n            alert_text = alert.text\n            assert \"Please fill out Name and Creditcard.\" in alert_text, f\"Алерт не содержит ожидаемый текст: {alert_text}\"\n            alert.accept()\n>       except TimeoutException:\nE       NameError: name 'TimeoutException' is not defined\n\ntests/test_add_items_to_cart_and_order_placement.py:171: NameError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1745242496989,
      "stop" : 1745242496989,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1745242560133,
      "stop" : 1745242562156,
      "duration" : 2023
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1745242560133,
      "stop" : 1745242560133,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1745242496988,
      "stop" : 1745242496989,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1745242496989,
      "stop" : 1745242496989,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1745242571013,
      "stop" : 1745242571127,
      "duration" : 114
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_add_items_to_cart_and_order_placement"
  }, {
    "name" : "host",
    "value" : "MacBook-Pro-Natasha.local"
  }, {
    "name" : "thread",
    "value" : "4945-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_add_items_to_cart_and_order_placement"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "896cf1f5b6ce4c5b.json",
  "parameterValues" : [ ]
}
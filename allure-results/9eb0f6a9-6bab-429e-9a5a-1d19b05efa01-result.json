{"name": "test_contact_us_page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"nav-link\" data-toggle=\"modal\" data-target=\"#exampleModal\" href=\"#\">...</a> is not clickable at point (783, 36). Other element would receive the click: <div class=\"modal-header\">...</div>\n  (Session info: chrome=133.0.6943.53)\nStacktrace:\n0   chromedriver                        0x0000000103cabbc8 chromedriver + 5766088\n1   chromedriver                        0x0000000103ca37ea chromedriver + 5732330\n2   chromedriver                        0x0000000103791680 chromedriver + 415360\n3   chromedriver                        0x00000001037e9b70 chromedriver + 777072\n4   chromedriver                        0x00000001037e79d1 chromedriver + 768465\n5   chromedriver                        0x00000001037e5062 chromedriver + 757858\n6   chromedriver                        0x00000001037e4248 chromedriver + 754248\n7   chromedriver                        0x00000001037d6d3d chromedriver + 699709\n8   chromedriver                        0x0000000103809052 chromedriver + 905298\n9   chromedriver                        0x00000001037d66b8 chromedriver + 698040\n10  chromedriver                        0x000000010380920e chromedriver + 905742\n11  chromedriver                        0x00000001038303e7 chromedriver + 1065959\n12  chromedriver                        0x0000000103808e23 chromedriver + 904739\n13  chromedriver                        0x00000001037d4bea chromedriver + 691178\n14  chromedriver                        0x00000001037d5d41 chromedriver + 695617\n15  chromedriver                        0x0000000103c6f100 chromedriver + 5517568\n16  chromedriver                        0x0000000103c73040 chromedriver + 5533760\n17  chromedriver                        0x0000000103c50c87 chromedriver + 5393543\n18  chromedriver                        0x0000000103c73acb chromedriver + 5536459\n19  chromedriver                        0x0000000103c3f544 chromedriver + 5322052\n20  chromedriver                        0x0000000103c916e8 chromedriver + 5658344\n21  chromedriver                        0x0000000103c918af chromedriver + 5658799\n22  chromedriver                        0x0000000103ca33c8 chromedriver + 5731272\n23  libsystem_pthread.dylib             0x00007ff81b7cc253 _pthread_start + 99\n24  libsystem_pthread.dylib             0x00007ff81b7c7bef thread_start + 15", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2dc8f21d23a1e787ea05cd6b1ef0b9f6\")>\n\n    def test_contact_us_page(driver):\n        wait = WebDriverWait(driver, 10)\n>       driver.find_element(By.XPATH, \"/html/body/nav/div[1]/ul/li[2]/a\").click()\n\ntests/test_categories_and_products.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:570: in _execute\n    return self._parent.execute(command, params)\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10de14f80>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...7ff81b7cc253 _pthread_start + 99\\\\n24  libsystem_pthread.dylib             0x00007ff81b7c7bef thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"nav-link\" data-toggle=\"modal\" data-target=\"#exampleModal\" href=\"#\">...</a> is not clickable at point (783, 36). Other element would receive the click: <div class=\"modal-header\">...</div>\nE         (Session info: chrome=133.0.6943.53)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000103cabbc8 chromedriver + 5766088\nE       1   chromedriver                        0x0000000103ca37ea chromedriver + 5732330\nE       2   chromedriver                        0x0000000103791680 chromedriver + 415360\nE       3   chromedriver                        0x00000001037e9b70 chromedriver + 777072\nE       4   chromedriver                        0x00000001037e79d1 chromedriver + 768465\nE       5   chromedriver                        0x00000001037e5062 chromedriver + 757858\nE       6   chromedriver                        0x00000001037e4248 chromedriver + 754248\nE       7   chromedriver                        0x00000001037d6d3d chromedriver + 699709\nE       8   chromedriver                        0x0000000103809052 chromedriver + 905298\nE       9   chromedriver                        0x00000001037d66b8 chromedriver + 698040\nE       10  chromedriver                        0x000000010380920e chromedriver + 905742\nE       11  chromedriver                        0x00000001038303e7 chromedriver + 1065959\nE       12  chromedriver                        0x0000000103808e23 chromedriver + 904739\nE       13  chromedriver                        0x00000001037d4bea chromedriver + 691178\nE       14  chromedriver                        0x00000001037d5d41 chromedriver + 695617\nE       15  chromedriver                        0x0000000103c6f100 chromedriver + 5517568\nE       16  chromedriver                        0x0000000103c73040 chromedriver + 5533760\nE       17  chromedriver                        0x0000000103c50c87 chromedriver + 5393543\nE       18  chromedriver                        0x0000000103c73acb chromedriver + 5536459\nE       19  chromedriver                        0x0000000103c3f544 chromedriver + 5322052\nE       20  chromedriver                        0x0000000103c916e8 chromedriver + 5658344\nE       21  chromedriver                        0x0000000103c918af chromedriver + 5658799\nE       22  chromedriver                        0x0000000103ca33c8 chromedriver + 5731272\nE       23  libsystem_pthread.dylib             0x00007ff81b7cc253 _pthread_start + 99\nE       24  libsystem_pthread.dylib             0x00007ff81b7c7bef thread_start + 15\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException"}, "start": 1739233300592, "stop": 1739233301652, "uuid": "5f13821a-d7b3-4fe9-a036-3f720b13b821", "historyId": "563d21b3e2a2799da651a2a0ae8762a0", "testCaseId": "563d21b3e2a2799da651a2a0ae8762a0", "fullName": "tests.test_categories_and_products#test_contact_us_page", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_categories_and_products"}, {"name": "host", "value": "MacBook-Pro-Natasha.local"}, {"name": "thread", "value": "94046-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_categories_and_products"}]}
{"name": "test_login_logout_flow", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=135.0.7049.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n0   chromedriver                        0x0000000104936448 chromedriver + 6149192\n1   chromedriver                        0x000000010492db0a chromedriver + 6114058\n2   chromedriver                        0x00000001043bee80 chromedriver + 417408\n3   chromedriver                        0x00000001043d267b chromedriver + 497275\n4   chromedriver                        0x00000001043d1432 chromedriver + 492594\n5   chromedriver                        0x00000001043c6579 chromedriver + 447865\n6   chromedriver                        0x00000001043c46d8 chromedriver + 440024\n7   chromedriver                        0x00000001043c8593 chromedriver + 456083\n8   chromedriver                        0x00000001043c8643 chromedriver + 456259\n9   chromedriver                        0x000000010441224e chromedriver + 758350\n10  chromedriver                        0x0000000104404523 chromedriver + 701731\n11  chromedriver                        0x0000000104436792 chromedriver + 907154\n12  chromedriver                        0x0000000104403f28 chromedriver + 700200\n13  chromedriver                        0x000000010443694e chromedriver + 907598\n14  chromedriver                        0x000000010445daca chromedriver + 1067722\n15  chromedriver                        0x0000000104436563 chromedriver + 906595\n16  chromedriver                        0x0000000104402955 chromedriver + 694613\n17  chromedriver                        0x00000001044035b1 chromedriver + 697777\n18  chromedriver                        0x00000001048f3f00 chromedriver + 5877504\n19  chromedriver                        0x00000001048f7df1 chromedriver + 5893617\n20  chromedriver                        0x00000001048ce344 chromedriver + 5722948\n21  chromedriver                        0x00000001048f880b chromedriver + 5896203\n22  chromedriver                        0x00000001048bcac4 chromedriver + 5651140\n23  chromedriver                        0x000000010491b918 chromedriver + 6039832\n24  chromedriver                        0x000000010491bae0 chromedriver + 6040288\n25  chromedriver                        0x000000010492d6d1 chromedriver + 6112977\n26  libsystem_pthread.dylib             0x00007ff805505df1 _pthread_start + 99\n27  libsystem_pthread.dylib             0x00007ff805501857 thread_start + 15", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c1ac7b74936051fe75e6698162d9b2d7\")>\n\n    def test_login_logout_flow(driver):\n        auth_page = AuthPage(driver)\n>       auth_page.login(\"TestYura123\", \"Test12345\")\n\ntests/test_authorization_and_registration.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/auth_page.py:24: in login\n    self.click(self.LOGIN_BUTTON)\npages/base_page.py:12: in click\n    self.wait.until(EC.element_to_be_clickable(locator)).click()\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:570: in _execute\n    return self._parent.execute(command, params)\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1074cd8b0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...7ff805505df1 _pthread_start + 99\\\\n27  libsystem_pthread.dylib             0x00007ff805501857 thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=135.0.7049.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000104936448 chromedriver + 6149192\nE       1   chromedriver                        0x000000010492db0a chromedriver + 6114058\nE       2   chromedriver                        0x00000001043bee80 chromedriver + 417408\nE       3   chromedriver                        0x00000001043d267b chromedriver + 497275\nE       4   chromedriver                        0x00000001043d1432 chromedriver + 492594\nE       5   chromedriver                        0x00000001043c6579 chromedriver + 447865\nE       6   chromedriver                        0x00000001043c46d8 chromedriver + 440024\nE       7   chromedriver                        0x00000001043c8593 chromedriver + 456083\nE       8   chromedriver                        0x00000001043c8643 chromedriver + 456259\nE       9   chromedriver                        0x000000010441224e chromedriver + 758350\nE       10  chromedriver                        0x0000000104404523 chromedriver + 701731\nE       11  chromedriver                        0x0000000104436792 chromedriver + 907154\nE       12  chromedriver                        0x0000000104403f28 chromedriver + 700200\nE       13  chromedriver                        0x000000010443694e chromedriver + 907598\nE       14  chromedriver                        0x000000010445daca chromedriver + 1067722\nE       15  chromedriver                        0x0000000104436563 chromedriver + 906595\nE       16  chromedriver                        0x0000000104402955 chromedriver + 694613\nE       17  chromedriver                        0x00000001044035b1 chromedriver + 697777\nE       18  chromedriver                        0x00000001048f3f00 chromedriver + 5877504\nE       19  chromedriver                        0x00000001048f7df1 chromedriver + 5893617\nE       20  chromedriver                        0x00000001048ce344 chromedriver + 5722948\nE       21  chromedriver                        0x00000001048f880b chromedriver + 5896203\nE       22  chromedriver                        0x00000001048bcac4 chromedriver + 5651140\nE       23  chromedriver                        0x000000010491b918 chromedriver + 6039832\nE       24  chromedriver                        0x000000010491bae0 chromedriver + 6040288\nE       25  chromedriver                        0x000000010492d6d1 chromedriver + 6112977\nE       26  libsystem_pthread.dylib             0x00007ff805505df1 _pthread_start + 99\nE       27  libsystem_pthread.dylib             0x00007ff805501857 thread_start + 15\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: StaleElementReferenceException"}, "start": 1745242594660, "stop": 1745242595422, "uuid": "bf6b5b83-5881-4e97-af3b-712fc8b7283b", "historyId": "8eb4f1f8d1e752c4efabfb2b65eb2b4f", "testCaseId": "8eb4f1f8d1e752c4efabfb2b65eb2b4f", "fullName": "tests.test_authorization_and_registration#test_login_logout_flow", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_authorization_and_registration"}, {"name": "host", "value": "MacBook-Pro-Natasha.local"}, {"name": "thread", "value": "4945-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_authorization_and_registration"}]}